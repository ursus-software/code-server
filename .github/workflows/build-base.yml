name: Build Base Image

on:
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
    paths: [ 'Dockerfile' ]
  pull_request:
    branches: [ master ]
    paths: [ 'Dockerfile' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-base:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      metadata: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2metadata:read

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ inputs.registry }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
            prefix=
            suffix=

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          # build-args:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Trigger a rebuild repository_dispatch webhook event
      # https://github.com/octokit/request-action
      - name: Trigger a rebuild repository_dispatch webhook event
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/dispatches
          repository: ${{ github.repository }}
          body: |
            {"event_type": "rebuild"}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

